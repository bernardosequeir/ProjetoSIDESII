<?xml version="1.0" encoding="utf-8"?>
<!--
- phpMyAdmin XML Dump
- version 5.0.2
- https://www.phpmyadmin.net
-
- Host: 127.0.0.1
- Generation Time: Apr 13, 2020 at 07:38 PM
- Server version: 10.4.11-MariaDB
- PHP Version: 7.4.4
-->

<pma_xml_export version="1.0" xmlns:pma="https://www.phpmyadmin.net/some_doc_url/">
    <!--
    - Structure schemas
    -->
    <pma:structure_schemas>
        <pma:database name="g12_museum" collation="utf8mb4_general_ci" charset="utf8mb4">
            <pma:table name="diasemana">
                CREATE TABLE `diasemana` (
                  `DiaSemana` varchar(20) NOT NULL,
                  `HoraRonda` time NOT NULL,
                  PRIMARY KEY (`DiaSemana`,`HoraRonda`),
                  KEY `HoraRonda` (`HoraRonda`)
                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
            </pma:table>
            <pma:trigger name="Atualizar_DiaSemana">
                CREATE TRIGGER `Atualizar_DiaSemana` AFTER UPDATE ON `diasemana`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logdiasemana VALUES ( DEFAULT, @UserMail, 'UPDATE', now(), new.DiaSemana, new.HoraRonda);
                END
            </pma:trigger>
            <pma:trigger name="Eliminar_DiaSemana">
                CREATE TRIGGER `Eliminar_DiaSemana` AFTER DELETE ON `diasemana`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logdiasemana VALUES ( DEFAULT, @UserMail, 'DELETE', now(), old.DiaSemana, old.HoraRonda);
                END
            </pma:trigger>
            <pma:trigger name="Inserir_DiaSemana">
                CREATE TRIGGER `Inserir_DiaSemana` AFTER INSERT ON `diasemana`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logdiasemana VALUES ( DEFAULT, @UserMail, 'INSERT', now(), new.DiaSemana, new.HoraRonda);
                END
            </pma:trigger>
            <pma:table name="g12_logdiasemana">
                CREATE TABLE `g12_logdiasemana` (
                  `id` int(11) NOT NULL AUTO_INCREMENT,
                  `User` varchar(100) NOT NULL,
                  `Operacao` varchar(10) NOT NULL,
                  `Time` time NOT NULL,
                  `DiaSemana` varchar(20) NOT NULL,
                  `HoraRonda` time NOT NULL,
                  PRIMARY KEY (`id`)
                ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
            </pma:table>
            <pma:table name="g12_logmedicaosensores">
                CREATE TABLE `g12_logmedicaosensores` (
                  `id` int(11) NOT NULL AUTO_INCREMENT,
                  `User` varchar(100) NOT NULL,
                  `Operacao` varchar(10) NOT NULL,
                  `Time` time NOT NULL,
                  `ValorMedicao` decimal(6,2) NOT NULL,
                  `TipoDeSensor` varchar(3) NOT NULL,
                  `DataHoraMedicao` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
                  `PossivelAnomalia` varchar(45) NOT NULL,
                  PRIMARY KEY (`id`)
                ) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;
            </pma:table>
            <pma:table name="g12_logrondaextra">
                CREATE TABLE `g12_logrondaextra` (
                  `id` int(11) NOT NULL AUTO_INCREMENT,
                  `User` varchar(100) NOT NULL,
                  `Operacao` varchar(10) NOT NULL,
                  `Time` time NOT NULL,
                  `DataHora` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
                  `EmailUtilizador` varchar(100) NOT NULL,
                  `datahoraSaida` timestamp NOT NULL DEFAULT current_timestamp(),
                  PRIMARY KEY (`id`)
                ) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;
            </pma:table>
            <pma:table name="g12_logsistema">
                CREATE TABLE `g12_logsistema` (
                  `id` int(11) NOT NULL AUTO_INCREMENT,
                  `User` varchar(100) NOT NULL,
                  `Operacao` varchar(10) NOT NULL,
                  `Time` time NOT NULL,
                  `IDSistema` int(11) NOT NULL,
                  `LimiteTemperatura` decimal(6,2) DEFAULT NULL,
                  `LimiteHumidade` decimal(6,2) DEFAULT NULL,
                  `LimiteLuminosidade` decimal(6,2) DEFAULT NULL,
                  `LimiarTemperatura` decimal(6,2) DEFAULT NULL,
                  `LimiarHumidade` decimal(6,2) DEFAULT NULL,
                  `LimiarLuminosidade` decimal(6,2) DEFAULT NULL,
                  `DuracaoPadraoRonda` int(11) DEFAULT NULL,
                  `PeriocidadeImportacaoExportacao` int(11) DEFAULT NULL,
                  PRIMARY KEY (`id`)
                ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
            </pma:table>
            <pma:table name="g12_loguser">
                CREATE TABLE `g12_loguser` (
                  `id` int(11) NOT NULL AUTO_INCREMENT,
                  `User` varchar(100) NOT NULL,
                  `Operacao` varchar(10) NOT NULL,
                  `Time` time NOT NULL,
                  `Email` varchar(100) NOT NULL,
                  `NomeUtilizador` varchar(200) NOT NULL,
                  `TipoUtilizador` varchar(3) NOT NULL,
                  `Morada` varchar(200) DEFAULT NULL,
                  PRIMARY KEY (`id`)
                ) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=latin1;
            </pma:table>
            <pma:table name="g12_loguserhasdiasemana">
                CREATE TABLE `g12_loguserhasdiasemana` (
                  `id` int(11) NOT NULL AUTO_INCREMENT,
                  `User` varchar(100) NOT NULL,
                  `Operacao` varchar(10) NOT NULL,
                  `Time` time NOT NULL,
                  `User_Email` varchar(100) NOT NULL,
                  `DiaSemana_DiaDaSemana` varchar(20) NOT NULL,
                  `DiaSemana_HoraRonda` varchar(45) NOT NULL,
                  PRIMARY KEY (`id`)
                ) ENGINE=InnoDB DEFAULT CHARSET=latin1;
            </pma:table>
            <pma:table name="medicaosensores">
                CREATE TABLE `medicaosensores` (
                  `idMedicao` int(11) NOT NULL,
                  `ValorMedicao` decimal(6,2) NOT NULL,
                  `TipoSensor` varchar(3) NOT NULL,
                  `DataHoraMedicao` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
                  `PossivelAnomalia` tinyint(4) NOT NULL,
                  PRIMARY KEY (`idMedicao`)
                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
            </pma:table>
            <pma:trigger name="Atualizar_Medicoes">
                CREATE TRIGGER `Atualizar_Medicoes` AFTER UPDATE ON `medicaosensores`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logmedicaosensores VALUES (DEFAULT, @UserMail ,'UPDATE', now(),new.ValorMedicao, new.TipoSensor, new.DataHoraMedicao, new.PossivelAnomalia);
                END
            </pma:trigger>
            <pma:trigger name="Eliminar_Medicoes">
                CREATE TRIGGER `Eliminar_Medicoes` AFTER DELETE ON `medicaosensores`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logmedicaosensores VALUES (DEFAULT, @UserMail ,'DELETE', now(),old.ValorMedicao, old.TipoSensor, old.DataHoraMedicao, old.PossivelAnomalia);
                END
            </pma:trigger>
            <pma:trigger name="Inserir_Medicoes">
                CREATE TRIGGER `Inserir_Medicoes` AFTER INSERT ON `medicaosensores`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logmedicaosensores VALUES ( DEFAULT, @UserMail ,'INSERT', now(),new.ValorMedicao, new.TipoSensor, new.DataHoraMedicao, new.PossivelAnomalia);
                END
            </pma:trigger>
            <pma:table name="rondaextra">
                CREATE TABLE `rondaextra` (
                  `dataHoraEntrada` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
                  `EmailUtilizador` varchar(100) NOT NULL,
                  `datahoraSaida` timestamp NULL DEFAULT NULL,
                  PRIMARY KEY (`dataHoraEntrada`),
                  KEY `EmailUtilizador` (`EmailUtilizador`),
                  CONSTRAINT `rondaextra_ibfk_1` FOREIGN KEY (`EmailUtilizador`) REFERENCES `utilizador` (`EmailUtilizador`)
                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
            </pma:table>
            <pma:trigger name="Atualizar_RondaExtra">
                CREATE TRIGGER `Atualizar_RondaExtra` AFTER UPDATE ON `rondaextra`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logrondaextra VALUES (DEFAULT,  @UserMail , 'UPDATE', now(),new.dataHoraEntrada,new.EmailUtilizador, new.datahoraSaida);
                END
            </pma:trigger>
            <pma:trigger name="Eliminar_RondaExtra">
                CREATE TRIGGER `Eliminar_RondaExtra` AFTER DELETE ON `rondaextra`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logrondaextra VALUES ( DEFAULT,  @UserMail , 'DELETE', now(),old.dataHoraEntrada,old.EmailUtilizador, old.datahoraSaida);
                END
            </pma:trigger>
            <pma:trigger name="Inserir_RondaExtra">
                CREATE TRIGGER `Inserir_RondaExtra` AFTER INSERT ON `rondaextra`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logrondaextra VALUES ( DEFAULT,  @UserMail , 'INSERT', now(),new.dataHoraEntrada, new.EmailUtilizador, new.datahoraSaida);
                END
            </pma:trigger>
            <pma:table name="ronda_planeada">
                CREATE TABLE `ronda_planeada` (
                  `EmailUtilizador` varchar(100) NOT NULL,
                  `DiaSemana` varchar(20) NOT NULL,
                  `HoraRondaInicio` time NOT NULL,
                  KEY `DiaSemana` (`DiaSemana`),
                  KEY `EmailUtilizador` (`EmailUtilizador`),
                  KEY `HoraRondaInicio` (`HoraRondaInicio`),
                  CONSTRAINT `ronda_planeada_ibfk_1` FOREIGN KEY (`DiaSemana`) REFERENCES `diasemana` (`DiaSemana`) ON DELETE CASCADE ON UPDATE CASCADE,
                  CONSTRAINT `ronda_planeada_ibfk_2` FOREIGN KEY (`EmailUtilizador`) REFERENCES `utilizador` (`EmailUtilizador`) ON DELETE CASCADE,
                  CONSTRAINT `ronda_planeada_ibfk_3` FOREIGN KEY (`HoraRondaInicio`) REFERENCES `diasemana` (`HoraRonda`) ON DELETE CASCADE ON UPDATE CASCADE
                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
            </pma:table>
            <pma:table name="sistema">
                CREATE TABLE `sistema` (
                  `IDSistema` int(11) NOT NULL,
                  `LimiteTemperatura` decimal(6,2) NOT NULL,
                  `LimiteHumidade` decimal(6,2) NOT NULL,
                  `LimiteLuminosidade` decimal(6,2) NOT NULL,
                  `LimiarTemperatura` decimal(6,2) NOT NULL,
                  `LimiarHumidade` decimal(6,2) NOT NULL,
                  `LimiarLuminosidade` decimal(6,2) NOT NULL,
                  `DuraçãoPadrãoRonda` int(11) NOT NULL,
                  `PeriocidadeImportacaoExportacao` int(11) NOT NULL,
                  PRIMARY KEY (`IDSistema`)
                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
            </pma:table>
            <pma:trigger name="Atualizar_Sistema">
                CREATE TRIGGER `Atualizar_Sistema` AFTER UPDATE ON `sistema`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logsistema VALUES ( DEFAULT, @UserMail, 'UPDATE', now(), new.IDSistema, new.LimiteTemperatura, new.LimiteHumidade, new.LimiteLuminosidade, new.LimiarTemperatura, new.LimiarHumidade, new.LimiarLuminosidade, new.DuraçãoPadrãoRonda, new.PeriocidadeImportacaoExportacao);
                END
            </pma:trigger>
            <pma:trigger name="Eliminar_Sistema">
                CREATE TRIGGER `Eliminar_Sistema` AFTER DELETE ON `sistema`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logsistema VALUES ( DEFAULT, @UserMail, 'DELETE', now(), old.IDSistema, old.LimiteTemperatura, old.LimiteHumidade, old.LimiteLuminosidade, old.LimiarTemperatura, old.LimiarHumidade, old.LimiarLuminosidade, old.DuraçãoPadrãoRonda, old.PeriocidadeImportacaoExportacao);
                END
            </pma:trigger>
            <pma:trigger name="Inserir_Sistema">
                CREATE TRIGGER `Inserir_Sistema` AFTER INSERT ON `sistema`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_logsistema VALUES ( DEFAULT, @UserMail, 'INSERT', now(), new.IDSistema, new.LimiteTemperatura, new.LimiteHumidade, new.LimiteLuminosidade, new.LimiarTemperatura, new.LimiarHumidade, new.LimiarLuminosidade, new.DuraçãoPadrãoRonda, new.PeriocidadeImportacaoExportacao);
                END
            </pma:trigger>
            <pma:table name="utilizador">
                CREATE TABLE `utilizador` (
                  `EmailUtilizador` varchar(100) NOT NULL,
                  `NomeUtilizador` varchar(200) NOT NULL,
                  `TipoUtilizador` varchar(3) NOT NULL,
                  `Morada` varchar(200) NOT NULL,
                  PRIMARY KEY (`EmailUtilizador`),
                  KEY `EmailUtilizador` (`EmailUtilizador`)
                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
            </pma:table>
            <pma:trigger name="Atualizar_Utilizador">
                CREATE TRIGGER `Atualizar_Utilizador` AFTER UPDATE ON `utilizador`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_loguser VALUES ( DEFAULT, @UserMail , 'UPDATE',now(), new.EmailUtilizador, new.NomeUtilizador, new.TipoUtilizador, new.Morada);
                END
            </pma:trigger>
            <pma:trigger name="Eliminar_Utilizador">
                CREATE TRIGGER `Eliminar_Utilizador` AFTER DELETE ON `utilizador`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_loguser VALUES (DEFAULT, @UserMail , 'DELETE',now(), old.EmailUtilizador, old.NomeUtilizador, old.TipoUtilizador, old.Morada);
                END
            </pma:trigger>
            <pma:trigger name="Inserir_Utilizador">
                CREATE TRIGGER `Inserir_Utilizador` AFTER INSERT ON `utilizador`
                 FOR EACH ROW BEGIN
                	-- Find username of person performing the INSERT into table
                	SELECT user INTO @UserMail FROM (
                        SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	INSERT INTO g12_loguser VALUES ( DEFAULT, @UserMail , 'INSERT',now(), new.EmailUtilizador, new.NomeUtilizador, new.TipoUtilizador, new.Morada);
                END
            </pma:trigger>
            <pma:procedure name="AlterarUtilizador">
                CREATE DEFINER=`root`@`localhost` PROCEDURE `AlterarUtilizador`(IN `Mail` VARCHAR(100), IN `nPass` VARCHAR(10), IN `nMorada` VARCHAR(200))
                BEGIN
                	SELECT user INTO @userId FROM (
                		SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	SELECT default_role INTO @role FROM (
                        SELECT default_role, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                    IF(CURRENT_ROLE = 'seguranca' OR @role= 'seguranca') THEN 
                		IF(Mail = @userID) THEN
                            IF(NOT(nPass = 'NULL')) THEN
                                SET @sql := CONCAT('ALTER USER ','''', Mail,'''','@localhost', ' IDENTIFIED BY ', '''', nPass,'''');
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                			END IF;
                            IF(NOT(nMorada = 'NULL')) THEN
                				UPDATE utilizador
                                SET Morada = nMorada WHERE EmailUtilizador = @userId;
                			END IF;
                        END IF;
                    ELSEIF(CURRENT_ROLE = 'chefe_seguranca' OR @role= 'chefe_seguranca') THEN 
                		IF(Mail = @userID) THEN
                			IF(NOT(nMorada = 'NULL')) THEN
                				UPDATE utilizador
                                SET Morada = nNome WHERE nMorada = @userId;
                			END IF;
                            IF(NOT(nPass = 'NULL')) THEN
                                SET @sql := CONCAT('ALTER USER ','''', Mail,'''','@localhost', ' IDENTIFIED BY ', '''', nPass,'''');
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                			END IF;
                        ELSE
                			SELECT TipoUtilizador FROM utilizador WHERE EmailUtilizador = Mail INTO @Tipppo;
                            IF (@Tipppo = 'SEG') THEN
                				IF(NOT(nPass = 'NULL')) THEN
                					SET @sql := CONCAT('ALTER USER ','''', Mail,'''','@localhost', ' IDENTIFIED BY ', '''', nPass,'''');
                					PREPARE stmt FROM @sql;
                					EXECUTE stmt;
                				END IF;
                				IF(NOT(nMorada = 'NULL')) THEN
                					UPDATE utilizador
                					SET Morada = nMorada WHERE EmailUtilizador = Mail;
                				END IF;
                			END IF;	
                        END IF;
                	ELSE 
                		IF(NOT(nPass = 'NULL')) THEN
                			SET @sql := CONCAT('ALTER USER ','''', Mail,'''','@localhost', ' IDENTIFIED BY ', '''', nPass,'''');
                			PREPARE stmt FROM @sql;
                			EXECUTE stmt;
                		END IF;
                		IF(NOT(nMorada = 'NULL')) THEN
                				UPDATE utilizador
                                SET Morada = nMorada WHERE EmailUtilizador = Mail;
                		END IF;
                        
                    END IF;
                
                END
            </pma:procedure>
            <pma:procedure name="ConsultarUtilizador">
                CREATE DEFINER=`root`@`localhost` PROCEDURE `ConsultarUtilizador`(Email VARCHAR(100))
                BEGIN
                	SELECT user INTO @userId FROM (
                		SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	SELECT default_role INTO @role FROM (
                        SELECT default_role, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	 IF(CURRENT_ROLE = 'chefe_seguranca' OR @role= 'chefe_seguranca') THEN
                		SELECT NomeUtilizador FROM utilizador WHERE EmailUtilizador = Email INTO @Nomee;
                        SELECT TipoUtilizador FROM utilizador WHERE EmailUtilizador = Email INTO @Tipoo;
                        SELECT Morada FROM utilizador WHERE EmailUtilizador = Email INTo @Morada;
                        SELECT Morada FROM utilizador WHERE EmailUtilizador = Email INTo @cMorada;
                        SELECT NomeUtilizador FROM utilizador WHERE EmailUtilizador = @userId INTO @cNomee;
                        SELECT TipoUtilizador FROM utilizador WHERE EmailUtilizador = @userId INTO @cTipoo;
                		IF (Email = 'NULL') Then
                			SELECT * FROM utilizador where (TipoUtilizador = 'SEG' OR EmailUtilizador = @userId);
                            INSERT INTO g12_loguser VALUES ( DEFAULT, @UserID , 'SELECT',now(), Email, @cNomee, @cTipoo, @cMorada);
                		ELSEIF ( Email = @userId) THEN
                			SELECT * FROM utilizador where (EmailUtilizador = @userId);
                            INSERT INTO g12_loguser VALUES ( DEFAULT, @UserID , 'SELECT',now(), Email, @Nomee, @Tipoo, @Morada);
                		ELSE 
                			SELECT * FROM utilizador where (EmailUtilizador = Email AND TipoUtilizador = 'SEG');
                            INSERT INTO g12_loguser VALUES (  DEFAULT, @UserID , 'SELECT',now(), Email, @Nomee, @Tipoo, @Morada);
                        END IF;
                	ELSEIF(CURRENT_ROLE = 'seguranca' OR @role= 'seguranca') THEN 
                		SELECT NomeUtilizador FROM utilizador WHERE EmailUtilizador = Email INTO @Nomee;
                        SELECT TipoUtilizador FROM utilizador WHERE EmailUtilizador = Email INTO @Tipoo;
                        SELECT Morada FROM utilizador WHERE EmailUtilizador = Email INTo @Morada;
                        SELECT NomeUtilizador FROM utilizador WHERE EmailUtilizador = @userId INTO @cNomee;
                        SELECT TipoUtilizador FROM utilizador WHERE EmailUtilizador = @userId INTO @cTipoo;
                		IF (Email = 'NULL') Then
                			SELECT * FROM utilizador where (EmailUtilizador = @userId);
                            INSERT INTO g12_loguser VALUES ( DEFAULT, @UserID , 'SELECT',now(), Email, @cNomee, @cTipoo, @cMorada);
                		ELSEIF ( Email = @userId) THEN
                			SELECT * FROM utilizador where (EmailUtilizador = @userId);
                            INSERT INTO g12_loguser VALUES ( DEFAULT, @UserID , 'SELECT',now(), Email, @Nomee, @Tipoo, @Morada);
                		ELSE
                			SELECT * FROM utilizador where (EmailUtilizador = @userId AND EmailUtilizador = Email);
                        END IF;
                	ELSEIF(CURRENT_ROLE = 'diretor' OR @role= 'diretor' OR CURRENT_ROLE = 'admnistrador' OR @role= 'admnistrador') THEN
                		SELECT NomeUtilizador FROM utilizador WHERE EmailUtilizador = Email INTO @Nomee;
                        SELECT TipoUtilizador FROM utilizador WHERE EmailUtilizador = Email INTO @Tipoo;        
                        SELECT Morada FROM utilizador WHERE EmailUtilizador = Email INTo @Morada;
                        SELECT NomeUtilizador FROM utilizador WHERE EmailUtilizador = @userId INTO @cNomee;
                        SELECT TipoUtilizador FROM utilizador WHERE EmailUtilizador = @userId INTO @cTipoo;
                        IF (Email = 'NULL') Then
                			SELECT * FROM utilizador;
                             INSERT INTO g12_loguser VALUES ( DEFAULT, @UserID , 'SELECT',now(), Email, @cNomee, @cTipoo, @cMorada);
                		ELSE
                			SELECT * FROM utilizador where (EmailUtilizador = Email);
                            INSERT INTO g12_loguser VALUES (DEFAULT, @UserID , 'SELECT',now(), Email, @Nomee, @Tipoo, @Morada);
                		END IF;
                            
                	END IF;
                END
            </pma:procedure>
            <pma:procedure name="InserirUtilizador">
                CREATE DEFINER=`root`@`localhost` PROCEDURE `InserirUtilizador`(Email VARCHAR(100),  Nome VARCHAR(200), Tipo VARCHAR(3), Pass VARCHAR(10), Morada VARCHAR(200))
                BEGIN
                	SELECT user INTO @userId FROM (
                		SELECT user, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	SELECT default_role INTO @role FROM (
                        SELECT default_role, CONCAT(user, '@', host) as userhost FROM mysql.user) base
                    WHERE userhost = USER();
                	 IF(CURRENT_ROLE = 'chefe_seguranca' OR @role= 'chefe_seguranca') THEN
                		IF(Tipo = 'SEG') THEN
                			INSERT INTO utilizador (
                				`EmailUtilizador`, `NomeUtilizador`, `TipoUtilizador`, `Morada`) VALUES (
                				Email,
                				Nome,
                				Tipo,
                                Morada);
                				SET Email := CONCAT('''', Email, '''', '@', 'localhost'),
                					Pass := CONCAT('''', Pass, '''');
                				SET @sql := CONCAT('CREATE USER ', Email, ' IDENTIFIED BY ', Pass);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				SET @sql := CONCAT('GRANT seguranca TO ', Email);
                                PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt;
                				SET @sql := CONCAT('SET DEFAULT ROLE seguranca FOR ', Email);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt;
                		END IF;
                    ELSEIF (CURRENT_ROLE = 'diretor' OR @role = 'diretor' OR CURRENT_ROLE = 'admnistrador' OR @role='admnistrador') THEN
                		IF(Tipo = 'SEG') THEN
                			INSERT INTO utilizador (
                				`EmailUtilizador`, `NomeUtilizador`, `TipoUtilizador`, `Morada`) VALUES (
                				Email,
                				Nome,
                				Tipo,
                                Morada);
                				SET Email := CONCAT('''', Email, '''', '@', 'localhost'),
                					Pass := CONCAT('''', Pass, '''');
                				SET @sql := CONCAT('CREATE USER ', Email, ' IDENTIFIED BY ', Pass);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				SET @sql := CONCAT('GRANT seguranca TO ', Email);
                                PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt;
                				SET @sql := CONCAT('SET DEFAULT ROLE seguranca FOR ', Email);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt;
                		ELSEIF(Tipo = 'CSG') THEN
                			INSERT INTO utilizador (
                				`EmailUtilizador`, `NomeUtilizador`, `TipoUtilizador`, `Morada`) VALUES (
                				Email,
                				Nome,
                				Tipo,
                                Morada);
                				SET Email := CONCAT('''', Email, '''', '@', 'localhost'),
                					Pass := CONCAT('''', Pass, '''');
                				SET @sql := CONCAT('CREATE USER ', Email, ' IDENTIFIED BY ', Pass);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				SET @sql := CONCAT('GRANT chefe_seguranca TO ', Email);
                                PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt;
                				SET @sql := CONCAT('SET DEFAULT ROLE chefe_seguranca FOR ', Email);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt;
                		ELSEIF(Tipo = 'DIR') THEN
                			INSERT INTO utilizador (
                				`EmailUtilizador`, `NomeUtilizador`, `TipoUtilizador`, `Morada`) VALUES (
                				Email,
                				Nome,
                				Tipo,
                                Morada);
                				SET Email := CONCAT('''', Email, '''', '@', 'localhost'),
                					Pass := CONCAT('''', Pass, '''');
                				SET @sql := CONCAT('CREATE USER ', Email, ' IDENTIFIED BY ', Pass);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				SET @sql := CONCAT('GRANT diretor TO ', Email);
                                PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt;
                				SET @sql := CONCAT('SET DEFAULT ROLE diretor FOR ', Email);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt;
                        ELSEIF(Tipo = 'AUD') THEN
                			INSERT INTO utilizador (
                				`EmailUtilizador`, `NomeUtilizador`, `TipoUtilizador`, `Morada`) VALUES (
                				Email,
                				Nome,
                				Tipo,
                                Morada);
                				SET Email := CONCAT('''', Email, '''', '@', 'localhost'),
                					Pass := CONCAT('''', Pass, '''');
                				SET @sql := CONCAT('CREATE USER ', Email, ' IDENTIFIED BY ', Pass);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				SET @sql := CONCAT('GRANT auditor TO ', Email);
                                PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt;
                				SET @sql := CONCAT('SET DEFAULT ROLE auditor FOR ', Email);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt; 
                		ELSEIF(Tipo = 'ADM') THEN
                			INSERT INTO utilizador (
                				`EmailUtilizador`, `NomeUtilizador`, `TipoUtilizador`, `Morada`) VALUES (
                				Email,
                				Nome,
                				Tipo,
                                Morada);
                				SET Email := CONCAT('''', Email, '''', '@', 'localhost'),
                					Pass := CONCAT('''', Pass, '''');
                				SET @sql := CONCAT('CREATE USER ', Email, ' IDENTIFIED BY ', Pass);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				SET @sql := CONCAT('GRANT admnistrador TO ', Email);
                                PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt;
                				SET @sql := CONCAT('SET DEFAULT ROLE admnistrador FOR ', Email);
                				PREPARE stmt FROM @sql;
                				EXECUTE stmt;
                				DEALLOCATE PREPARE stmt;
                		END IF;
                    END IF;
                END
            </pma:procedure>
        </pma:database>
    </pma:structure_schemas>

    <!--
    - Database: 'g12_museum'
    -->
    <database name="g12_museum">
        <!-- Table diasemana -->
        <table name="diasemana">
            <column name="DiaSemana">terca</column>
            <column name="HoraRonda">12:00:00</column>
        </table>
        <!-- Table g12_logdiasemana -->
        <table name="g12_logdiasemana">
            <column name="id">1</column>
            <column name="User">root</column>
            <column name="Operacao">INSERT</column>
            <column name="Time">17:51:44</column>
            <column name="DiaSemana">terca</column>
            <column name="HoraRonda">12:00:00</column>
        </table>
        <!-- Table g12_logmedicaosensores -->
        <table name="g12_logmedicaosensores">
            <column name="id">3</column>
            <column name="User">root</column>
            <column name="Operacao">INSERT</column>
            <column name="Time">18:12:51</column>
            <column name="ValorMedicao">3.00</column>
            <column name="TipoDeSensor">sem</column>
            <column name="DataHoraMedicao">2020-04-13 18:12:51</column>
            <column name="PossivelAnomalia">0</column>
        </table>
        <!-- Table g12_logrondaextra -->
        <table name="g12_logrondaextra">
            <column name="id">2</column>
            <column name="User">root</column>
            <column name="Operacao">DELETE</column>
            <column name="Time">17:58:02</column>
            <column name="DataHora">2020-04-13 17:56:47</column>
            <column name="EmailUtilizador">mail_2@mail</column>
            <column name="datahoraSaida">0000-00-00 00:00:00</column>
        </table>
        <table name="g12_logrondaextra">
            <column name="id">3</column>
            <column name="User">root</column>
            <column name="Operacao">INSERT</column>
            <column name="Time">17:58:23</column>
            <column name="DataHora">2020-04-13 17:58:23</column>
            <column name="EmailUtilizador">mail_2@mail</column>
            <column name="datahoraSaida">2020-04-12 23:59:13</column>
        </table>
        <!-- Table g12_logsistema -->
        <table name="g12_logsistema">
            <column name="id">1</column>
            <column name="User">root</column>
            <column name="Operacao">INSERT</column>
            <column name="Time">17:50:19</column>
            <column name="IDSistema">1</column>
            <column name="LimiteTemperatura">1.00</column>
            <column name="LimiteHumidade">1.00</column>
            <column name="LimiteLuminosidade">1.00</column>
            <column name="LimiarTemperatura">1.00</column>
            <column name="LimiarHumidade">1.00</column>
            <column name="LimiarLuminosidade">1.00</column>
            <column name="DuracaoPadraoRonda">1</column>
            <column name="PeriocidadeImportacaoExportacao">1</column>
        </table>
        <!-- Table g12_loguser -->
        <table name="g12_loguser">
            <column name="id">1</column>
            <column name="User">root</column>
            <column name="Operacao">INSERT</column>
            <column name="Time">17:27:38</column>
            <column name="Email">mail@mail</column>
            <column name="NomeUtilizador">nome</column>
            <column name="TipoUtilizador">SEG</column>
            <column name="Morada">vieira da silva</column>
        </table>
        <table name="g12_loguser">
            <column name="id">2</column>
            <column name="User">root</column>
            <column name="Operacao">INSERT</column>
            <column name="Time">17:28:17</column>
            <column name="Email">mail_2@mail</column>
            <column name="NomeUtilizador">nome</column>
            <column name="TipoUtilizador">SEG</column>
            <column name="Morada">vieira da silva</column>
        </table>
        <table name="g12_loguser">
            <column name="id">3</column>
            <column name="User">root</column>
            <column name="Operacao">INSERT</column>
            <column name="Time">18:17:35</column>
            <column name="Email">mail_3@mail</column>
            <column name="NomeUtilizador">teste</column>
            <column name="TipoUtilizador">SEG</column>
            <column name="Morada">Vieira da silva 2</column>
        </table>
        <table name="g12_loguser">
            <column name="id">4</column>
            <column name="User">root</column>
            <column name="Operacao">INSERT</column>
            <column name="Time">18:19:14</column>
            <column name="Email">mail_4@mail</column>
            <column name="NomeUtilizador">teste</column>
            <column name="TipoUtilizador">DIR</column>
            <column name="Morada">Vieira da silva 3</column>
        </table>
        <table name="g12_loguser">
            <column name="id">5</column>
            <column name="User">mail_3@mail</column>
            <column name="Operacao">SELECT</column>
            <column name="Time">18:26:06</column>
            <column name="Email">NULL</column>
            <column name="NomeUtilizador">teste</column>
            <column name="TipoUtilizador">SEG</column>
            <column name="Morada">NULL</column>
        </table>
        <table name="g12_loguser">
            <column name="id">6</column>
            <column name="User">mail_3@mail</column>
            <column name="Operacao">SELECT</column>
            <column name="Time">18:28:42</column>
            <column name="Email">mail_3@mail</column>
            <column name="NomeUtilizador">teste</column>
            <column name="TipoUtilizador">SEG</column>
            <column name="Morada">Vieira da silva 2</column>
        </table>
        <table name="g12_loguser">
            <column name="id">7</column>
            <column name="User">mail_3@mail</column>
            <column name="Operacao">UPDATE</column>
            <column name="Time">18:33:33</column>
            <column name="Email">mail_3@mail</column>
            <column name="NomeUtilizador">teste</column>
            <column name="TipoUtilizador">SEG</column>
            <column name="Morada">Rua Vieira da Silva 2</column>
        </table>
        <table name="g12_loguser">
            <column name="id">8</column>
            <column name="User">mail_3@mail</column>
            <column name="Operacao">SELECT</column>
            <column name="Time">18:34:09</column>
            <column name="Email">mail_3@mail</column>
            <column name="NomeUtilizador">teste</column>
            <column name="TipoUtilizador">SEG</column>
            <column name="Morada">Rua Vieira da Silva 2</column>
        </table>
        <!-- Table g12_loguserhasdiasemana -->
        <!-- Table medicaosensores -->
        <table name="medicaosensores">
            <column name="idMedicao">0</column>
            <column name="ValorMedicao">3.00</column>
            <column name="TipoSensor">sem</column>
            <column name="DataHoraMedicao">2020-04-13 18:12:51</column>
            <column name="PossivelAnomalia">0</column>
        </table>
        <!-- Table rondaextra -->
        <table name="rondaextra">
            <column name="dataHoraEntrada">2020-04-13 17:58:23</column>
            <column name="EmailUtilizador">mail_2@mail</column>
            <column name="datahoraSaida">2020-04-12 23:59:13</column>
        </table>
        <!-- Table ronda_planeada -->
        <table name="ronda_planeada">
            <column name="EmailUtilizador">mail@mail</column>
            <column name="DiaSemana">terca</column>
            <column name="HoraRondaInicio">12:00:00</column>
        </table>
        <!-- Table sistema -->
        <table name="sistema">
            <column name="IDSistema">1</column>
            <column name="LimiteTemperatura">1.00</column>
            <column name="LimiteHumidade">1.00</column>
            <column name="LimiteLuminosidade">1.00</column>
            <column name="LimiarTemperatura">1.00</column>
            <column name="LimiarHumidade">1.00</column>
            <column name="LimiarLuminosidade">1.00</column>
            <column name="DuraçãoPadrãoRonda">1</column>
            <column name="PeriocidadeImportacaoExportacao">1</column>
        </table>
        <!-- Table utilizador -->
        <table name="utilizador">
            <column name="EmailUtilizador">mail@mail</column>
            <column name="NomeUtilizador">nome</column>
            <column name="TipoUtilizador">SEG</column>
            <column name="Morada">vieira da silva</column>
        </table>
        <table name="utilizador">
            <column name="EmailUtilizador">mail_2@mail</column>
            <column name="NomeUtilizador">nome</column>
            <column name="TipoUtilizador">SEG</column>
            <column name="Morada">vieira da silva</column>
        </table>
        <table name="utilizador">
            <column name="EmailUtilizador">mail_3@mail</column>
            <column name="NomeUtilizador">teste</column>
            <column name="TipoUtilizador">SEG</column>
            <column name="Morada">Rua Vieira da Silva 2</column>
        </table>
        <table name="utilizador">
            <column name="EmailUtilizador">mail_4@mail</column>
            <column name="NomeUtilizador">teste</column>
            <column name="TipoUtilizador">DIR</column>
            <column name="Morada">Vieira da silva 3</column>
        </table>
    </database>
</pma_xml_export>